<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <atom:link href="https://rsdoiel.github.io/rss.xml" rel="self" type="application/rss+xml"/>
        <title>R. S. Doiel Blog</title>
        <link>https://rsdoiel.github.io</link>
        <description>Robert&#39;s ramblings and wonderigs</description>
        <pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate>
        <lastBuildDate>Sun, 25 May 2025 00:00:00 +0000</lastBuildDate>
        <generator>pttk rss 0.0.18</generator>
        <item>
            <title>A quick note in types in Deno+TypeScript</title>
            <link>https://rsdoiel.github.io/blog/2025/05/25/a_quick_notes_on_types.html</link>
            <description>Understanding the plumbing of a program that is built with Deno in TypeScript can be challenging if you can&#39;t identify the type of variables or constants.  TypeScript inherits the JavaScript function, `typeof`. This works nicely for simple types like `string`, `boolean`, `number` but is  less useful when compared to a class or interface name of a data structure.&#xA;&#xA;There are three approaches I&#39;ve found helpful in my exploration of type metadata when working with Deno+TypeScript. (NOTE: in the following&#xA;the value `VARIABLE_OR_CONSTANT` would be replaced with the object you are querying for type metadata)&#xA;&#xA;`typeof`&#xA;: This is good for simple types but when a type is an object you get `[object object]` response.&#xA;&#xA;`Object.protototype.toString.call(VARIABLE_OR_CONSTANT)`&#xA;: This is what is behind the `typeof` function but can be nice to know. It returns the string representation of the `VARIABLE_OR_CONSTANT` you pass to it.&#xA;&#xA;`VARIABLE_OR_CONSTANT.constructor.name`&#xA;: This will give you the name derived from the object&#39;s constructor, effectively the class name. It doesn&#39;t tell you if the the `VARIABLE_OR_CONSTANT` is an interface. If you construct an object as an object literal then the name returned will be `Object`. ...</description>
            <pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/05/25/a_quick_notes_on_types.html</guid>
        </item>
        <item>
            <title>New Life for Fielded Search</title>
            <link>https://rsdoiel.github.io/blog/2025/04/10/New_Life_for_Fielded_Search.html</link>
            <description>A day dreaming in response to a Simon Willison post on using language models&#xA;to convert queries into fielded searches. In this post I extrapolate how this&#xA;could result in a more private search experience and allow for an enhanced&#xA;search experience for static websites.&#xA;</description>
            <pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/04/10/New_Life_for_Fielded_Search.html</guid>
        </item>
        <item>
            <title>LLM first impressions a few weeks in</title>
            <link>https://rsdoiel.github.io/blog/2025/03/30/LLM_first_impressions_a_few_weeks_in.html</link>
            <description>A first take of LLM use for coding projects.&#xA;</description>
            <pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/03/30/LLM_first_impressions_a_few_weeks_in.html</guid>
        </item>
        <item>
            <title>Building Web Components using Large Language Models</title>
            <link>https://rsdoiel.github.io/blog/2025/03/13/Building_Web_Component_using_an_LLM.html</link>
            <description>Quick discussion of my recent experience bootstrapping the CL-web-components project&#xA;</description>
            <pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/03/13/Building_Web_Component_using_an_LLM.html</guid>
        </item>
        <item>
            <title>Setting up my Raspberry Pi 500, a Portable Workstation</title>
            <link>https://rsdoiel.github.io/blog/2025/02/14/Review_Pi-500_as_portable_workstation.html</link>
            <description>Quick notes on configuring a Raspberry Pi 500 as a portable workstation along with a price list.&#xA;</description>
            <pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/02/14/Review_Pi-500_as_portable_workstation.html</guid>
        </item>
        <item>
            <title>Book review, &#34;Man and the Computer&#34;</title>
            <link>https://rsdoiel.github.io/blog/2025/02/10/Man_and_the_Computer.html</link>
            <description>A book review of a vintage computer publication, &#34;Man and the Computer&#34; by&#xA;John G. Kemeny, published 1972, ISBN: 0684130092&#xA;Read at the Open Library, &lt;https://openlibrary.org/books/OL5282840M/Man_and_the_computer&gt; &#xA;</description>
            <pubDate>Mon, 10 Feb 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/02/10/Man_and_the_Computer.html</guid>
        </item>
        <item>
            <title>Working with Structured Data in Deno and TypeScript</title>
            <link>https://rsdoiel.github.io/blog/2025/02/03/working_with_structured_data.html</link>
            <description>A short discourse on working with structured data in TypeScript and easily&#xA;converting from JSON, YAML and XML representations.&#xA;</description>
            <pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/02/03/working_with_structured_data.html</guid>
        </item>
        <item>
            <title>Moving beyond git template repositories with CodeMeta</title>
            <link>https://rsdoiel.github.io/blog/2025/01/31/moving_beyond_git_templates.html</link>
            <description>An exploration of using CodeMeta objects to generate of software artifacts as an alternative to Git template repositories.&#xA;</description>
            <pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2025/01/31/moving_beyond_git_templates.html</guid>
        </item>
    </channel>
</rss>
