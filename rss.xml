<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <atom:link href="https://rsdoiel.github.io/rss.xml" rel="self" type="application/rss+xml"/>
        <title>Robert&#39;s ramblings and wonderig</title>
        <link>https://rsdoiel.github.io</link>
        <description>Robert&#39;s ramblings and wonderigs</description>
        <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
        <lastBuildDate>Mon, 22 Aug 2022 00:00:00 +0000</lastBuildDate>
        <generator>pdtk rss 0.0.3</generator>
        <item>
            <title>11:30 AM, SQL: Postgres</title>
            <link>https://rsdoiel.github.io/blog/2022/08/22/rosette-notes-2022-08-22_111130.html</link>
            <description>Post: Monday, August 22, 2022, 11:30 AM&#xA;&#xA;Three things have turned out to be challenges in the SQL I write, first back ticks is a MySQL-ism for literal quoting of table and column names, causes problems in Postgres. Second issue is &#34;REPLACE&#34; is a none standard extension I picked up from MySQL [it wraps a DELETE and INSERT together](https://dev.mysql.com/doc/refman/8.0/en/extensions-to-ansi.html), should be using UPDATE more than I have done in the past. The third is parameter replacement in SQL statement. This appears to be [db implementation specific](http://go-database-sql.org/prepared.html). I&#39;ve used &#34;?&#34; with SQLite and MySQL but with Postgres I need ot use &#34;$1&#34;, &#34;$2&#34;, etc. Challenging to write SQL once and have it work everywhere. Beginning to understand why GORM has traction.&#xA;&#xA; ...</description>
            <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2022/08/22/rosette-notes-2022-08-22_111130.html</guid>
        </item>
        <item>
            <title>Rosette Notes: Postgres and MySQL</title>
            <link>https://rsdoiel.github.io/blog/2022/08/19/rosette-notes.html</link>
            <description>&gt; A dance around two relational databases, piecing together similarities as with the tiny mosaic tiles of a guitar&#39;s rosette&#xA;&#xA;What follows are my preliminary notes learning Postgres 12 and 14.&#xA;&#xA;This is a short comparison of some administrative commands I commonly use. The first column describes the task followed by the SQL to execute for Postgres 14.5 and then MySQL 8. The presumption is you&#39;re using `psql` to access Postgres and `mysql` to  access MySQL. Values between `&lt;` and `&gt;` should be replaced with an appropriate value.&#xA;&#xA;| Task                    | Postgres 14.5                     | MySQL 8           |&#xA;|-------------------------|------------------------------------|-------------------|&#xA;| show all databases      | `SELECT datname FROM pg_database;` | `SHOW DATABASES;` |&#xA;| select a database       | `\c &lt;dbname&gt;`                      | `USE &lt;dbname&gt;`    |&#xA;| show tables in database | `\dt`                              | `SHOW TABLES;`    |&#xA;| show columns in table   | `SELECT column_name, data_type FROM information_schema.columns WHERE table_name = &#39;&lt;table_name&gt;&#39;;` | `SHOW COLUMNS IN &lt;table_name&gt;` |&#xA;&#xA;The Postgres shell, `psql`, provides the functionality of showing a list of tables via a short cut while MySQL choose to add the `SHOW TABLES` query. For me `SHOW ...` feels like SQL where as `\d` or `\dt` takes me out of SQL space. On the other hand given Postgres metadata structure the shortcut is appreciated and I often query for table names as I forget them. `\dt` quickly becomes second nature and is shorter to type than `SHOW TABLES`. ...</description>
            <pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate>
            <guid>https://rsdoiel.github.io/blog/2022/08/19/rosette-notes.html</guid>
        </item>
    </channel>
</rss>
