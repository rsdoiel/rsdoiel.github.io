{
  "page": 1,
  "total_pages": 1,
  "has_more": false,
  "next_page": null,
  "values": [
    {
      "content": "\n\nFreeDOS to Oberon System 3\n==========================\n\nBy R. S. Doiel, 2019-07-28\n\n>    UPDATE: (2021-02-26, RSD) Under VirtualBox 6.1 these\n>    instructions still fail. My hope is to revise these \n>    instructions when I get it all sorted out.\n>\n>    Many links such as the ftp site at ETH Oberon are \n>    no more. I've updated this page to point at Wayback machine\n>    or included content in here where I cannot find it else where.\n>\n>    UPDATE: (2021-02-19, RSD) Under VirtualBox 6.1 these instructions \n>    fail. For VirtualBox I’ve used FreeDOS 1.3rc3 Live CD installing \n>    the “Plain DOS” without problems.\n>\n>    UPDATE: (2021-03-16, RSD) After reviewing my post, correcting\n>    some mistakes I finally was able to get FreeDOS up and running\n>    on VirtualBox 6.1. This allows NativeOberon 2.3.6 to be brought\n>    up by booting the \"oberon0.dsk\" virtual floppy and following\n>    the instructions included. You need to know how to use\n>    the Oberon mouse and the way commands work in Oberon.\n\nWhat follows are notes on getting a FreeDOS 1.2[^1] and \nthen Native Oberon[^2] running under VirtualBox 6.0. You might \nwonder why these two are together. While it was\neasy to run the Native Oberon installation process that process\nassumes you have a properly partitioned hard disk and VirtualBox\nseems to skip that process. I found taking advantage of FreeDOS\nsimplified things for me.\n\nMy goal was running Oberon System 3, but setting up a Virtual Box\nwith FreeDOS 1.2 gave me a virtual machine that functions like a \n1999 era PC. From there all the steps in the Oberon instructions\njust worked.\n\n## Creating FreeDOS 1.2 Virtual Box\n\nI've been doing a bit if computer history reading and decided to\nbring up some older systems as a means to understand where\nthings were.  The first computers I had access to were 8080, 8086\nmachines running MS DOS based. My first computer programming language\nwas Turbo Pascal. Feeling a bit nostalgic I thought it would be\ninteresting to use it again and see what I remembered from the days\nof old. While PC and MS DOS no longer exist as commercial productions\nan wonderful group of Open Source hackers have brought new life into\nDOS with FreeDOS 1.2[^3]. You'll find many of your old familiar commands\nbut also some nice improvements. You can even run it under VirtualBox\nwhich is what I proceeded to do.\n\n### VirtualBox 6.0 setup\n\nThe [FreeDOS](https://freedos.org) website includes a CD ROM image\nthat you can use to install it. There are couple small hitches though\nto get it working under VirtualBox. First go to the [download](https://freedos.org/download) page and download the [CDROM \"standard\" installer\"](http://www.freedos.org/download/download/FD12CD.iso).\n\nWhile that is downloading you can setup your VirtualBox machine.\nFirst to remember is DOS compared to today's operating systems is\nfrugal in its hardware requirements. As a result I picked very modest\nsettings for my virtual machine. \n\n1. Launch VirtualBox\n2. From the menu, pick Machine then pick new\n3. Name your machine (e.g. \"FreeDOS 1.2\"), select the type: \"Other\" and Operating system of \"DOS\"\n4. Set memory size as you like, I just accepted the default 32MB\n5. Hard disk, pick \"Create a virtual hard disc now\"\n6. Hard disk file type, pick \"VHD (Virtual Hard Disk)\"\n7. Storage on physical hard disk, I picked Dynamically allocated both either is fine\n8. File location and size, I accepted the default location and size\n9. Before starting my FreeDOS box I made a couple of changes using \"settings\" menu icon\n    a. Display, I picked bumped memory up to 128M and picked VBoxSVGA with 33D acceleration (for games)\n    b. Storage, I added a second floppy drive (empty)\n    c. Network, I picked attached to NAT\n10. When looking at my virtual machine's detail page I clicked on the Optical drive (empty), click \"choose disc image\" and pointed at the downloaded installed CD\n11. Click Start.\n12. At \"Welcome to FreeDOS 1.2\" blue screen, hit TAB key\n13. You will see a line that begins with a boot instruction. Add a space than add the word \"raw\" (without quotes) press enter\n14. Follow the install instructions, when you get to \"Drive C: does not appear to be partitioned\" dialog, pick \"Yes - Partition drive C:\"\n15. On the next screen pick \"Yes - Please reboot now\"\n16. When at the \"Welcome to FreeDOS 1.2\" screen hit TAB again\n17. Once again add a space and type \"raw\" to the command then press enter\n18. Pick \"Yes - continue with the installation\"\n19. Pick \"Yes - Please erase and format drive C:\"\n20. At this point its a normal FreeDOS install\n21. When the install is done and reboots \"eject\" the virtual CD form the \"Optical Drive\" in the VirtualBox panel, then choose \"boot from system disk\",you now should have a working FreeDOS on VirtualBox\n\n## Native Oberon System 3 on Virtual Box\n\nNative Oberon can be found at http://www.ethoberon.ethz.ch/native/.\nThere is a related ftp site[^4] where you can download the necessary\nfiles for the stand alone version. \n\nHere's the steps I used in my Mac to download Native Oberon and\ninto a file on my desktop called \"NativeOberon-Standalone\". Open\nthe macOS Terminal application. I assume you've got a Unix\ncommand called [wget](https://en.wikipedia.org/wiki/Wget)\nalready installed[^5].\n\n> NOTE: The ETH ftp server is no more. I've included Web Archive\n> links and links to my own copies of the files needed to\n> install Native Oberon 2.3.6 in the paragraphs that follow.\n> RSD, 2021-03-16\n\n```bash\n\n    cd\n    mkdir -p Desktop/NativeOberon-Standalone\n    cd Desktop/NativeOberon-Standalone\n    wget ftp://ftp.ethoberon.ethz.ch/ETHOberon/Native/StdAlone/\n\n```\n\nClone your FreeDOS Box first. You'll want to do a \"Full Clone\". You'll\nalso want to \"remove\" any optical disks or floppies. You do that from\nthe virtual boxes' detail page and clicking on the drive and picking the\n\"Remove disk from virtual drive\" in the popup menu.\n\nAt this point we have a a virtual machine that is very similar to an \n1999 era PC installed with MS DOS.  [Native Oberon](http://web.archive.org/web/20190929033749/http://www.ethoberon.ethz.ch/native/) Normally you'd\ninstall [Native Oberon via 1.44MB floppy disks](/blog/2019/07/28/NativeOberon-StnAlone-2.3.6.zip \"Zip file of individual floppies\"). \nWe can simulate that with our Virtual machine.\nIn the folder of you downloaded there is disc called \"oberon0.dsk\". That\ncan go in our first floppy drive. But how to we get the rest of the \nfiles onto a virtual floppies? This wasn't obvious to me at first.\n\nThe Oberon install disks were organized as follows\n\n| PACKAGE    | FILENAME     | SIZE  | DSK   |\n| ---------- | ------------ | ----- | ----- |\n| Oberon-0      | [oberon0.dsk](oberon0.dsk \"boot disk\")  |          | 0 | \n| Gadgets       | [gadgets.arc](gadgets1.arc \"a modified gadgets.arc to fit 1.4 floppy\")  | 1.4  2.9 | 1 | \n| Documentation | [docu.arc](docu.arc \"documentation\")     | 1.3  2.5 | 2 | \n| Applications  | [apps.arc](apps.arc \"applications\")     | 1.3  2.8 | 3 | \n| Tutorials     | [tutorial.arc](tutorial.arc \"tutorial\") | 0.3  0.8 | 4 | \n| Pr3Fonts      | [pr3fonts.arc](pr3fonts.arc \"fonts\") | 0.3  0.6 | 4 | \n| Pr6Fonts      | [pr6fonts.arc](pr6fonts.arc \"fonts\") | 0.5  1.8 | 4 | \n| Source1       | [source1.arc](source1.arc \"Source Code\")  | 0.9  2.5 | 5 | \n| Source2       | [source2.arc](source2.arc \"Source Code\")  | 1.2  3.5 | 6 | \n| Source3       | [source3.arc](source3.arc \"Source Code\")  | 0.6  1.7 | 7 | \n\n\nIt turns out you can create 1.44MB Fat16 disc images from the\nVirtual Box 6.0 floppy drive link.  When you click on the floppy\ndrive in the details page you have a choice that includes \"create a new floppy disc\". Select this, find the disc a filename like \"disk1\". Click\non the virtual floppy disk in the Virtual Box and \"remove\"\nthe disc then create disk2, disk3, etc. In each the empty disc image\nfiles places the files from the table above. These image files can then\nbe opened on your host operating system and files copied to them. \nIt's a tedious process but this gives you something the Oberon System \ncan read and install from. Originally I just put all the files into an \nISO CD ROM image but I could not figure out how to mount that from this\nversion of Oberon. Now when you start up your Oberon V3 virtual machine\nyou can install the rest of the software like Gadgets.\n\n\n[^1]: FreeDOS is an Open Source implementation of PC/MS DOC\n\n[^2]: Native Oberon is a 1990's version of Oberon System running on i386\n\n[^3]: Download FreeDOS from http://freedos.org/download\n\n[^4]: Download Native Oberon Stand Alone from [ftp://ftp.ethoberon.ethz.ch/ETHOberon/Native/StdAlone](NativeOberon-StdAlone-2.3.6.zip \"Zip of what used to be available in that directory at ftp.ethoberon.ethz.ch\")\n\n[^5]: wget is easily installed with [HomeBrew](https://brew.sh/) or [Mac Ports](https://www.macports.org/)\n",
      "data": {
        "author": "rsdoiel@gmail.com (R. S. Doiel)",
        "copyright": "copyright (c) 2018, R. S. Doiel",
        "date": "2019-07-28",
        "keywords": [
          "FreeDOS",
          "Oberon System"
        ],
        "license": "https://creativecommons.org/licenses/by-sa/4.0/",
        "title": "FreeDOS 1.2 to Oberon System 3",
        "updated": "2021-03-16"
      },
      "url": "posts/2019/07/28/freedos-to-oberon-system-3.json"
    },
    {
      "content": "\nSetting up FreeDOS 1.3rc4 with Qemu\n-----------------------------------\n\nBy R. S. Doiel, 2021-11-27\n\nIn this article I'm going explore setting up FreeDOS with Qemu\non my venerable Dell 4319 running Raspberry Pi Desktop OS (Debian\nGNU/Linux).  First step is to download FreeDOS \"Live CD\" in the\n1.3 RC4 release. See http://freedos.org/download/ for that.\n\nInstalling Qemu\n---------------\n\nI needed to install Qemu in my laptop. It runs the Raspberry Pi\nDesktop OS (i.e. Debian with Raspberry Pi UI). I choose to install\nthe \"qemu-system\" package since I will likely use qemu for other\nthings besides FreeDOS. The qemu-system package contains all the\nvarious systems I might want to emulate in other projects as well\nas several qemu utilities that are handy.  Here's the full sequence\nof `apt` commands I ran (NOTE: these included making sure my laptop\nwas up to date before I installed qemu-system).\n\n~~~\nsudo apt update\nsudo apt upgrade\nsudo apt install qemu-system\n~~~\n\nNow that I had the software available it was time to figure out\nhow to actually knit things together and run FreeDOS.\n\n\nObtaining FreeDOS 1.3rc4\n------------------------\n\nBefore I get started I create a folder in my home directory\nfor running everything. You can name it what you want\nbut I called mine `FreeDOS_13` and changed into that folder\nfor the work in this article.\n\n~~~\nmkdir FreeDOS_13\ncd FreeDOS_13\n~~~\n\nI initially tried the CD images but ran into odd problems with\nqemu (possibly due to my lack of experience with qemu).\nAfter looking at that various options the USB Full release\nseemed like a good choice. It comes both as an image you can\n\"burn\" to your USB drive both also as a \"vmdk\" file used with\nemulators.\n\n~~~\ncurl -L -O https://www.ibiblio.org/pub/micro/pc-stuff/freedos/files/distributions/1.3/previews/1.3-rc4/FD13-FullUSB.zip\nunzip FD13-FullUSB.zip\n~~~\n\nAt this point you should see the FreeDOS \"vmdk\" file, and \"img\" file and readme files if you list the directory out. I'm going to use the \"vmdk\" file to install FreeDOS on my virtual harddrive freedos.img.\n\n~~~\nls -l \n~~~\n\nPrepping my virtual machine\n---------------------------\n\nA virtual machine is not just a CPU and some random\naccess memory. A machine can include storage devices. For\nthe retro \"DOS\" experience you might looking virtual devices\nfor a \"harddrive\", \"floppy drive\" and \"CD-ROM drive\". \nQemu provides a tool called `qemu-img` for creating \nthese types of virtual devices.\n\nThe basic command is `qemu-img` using the \"create\" option with\nsome parameters.  The parameter are filename and size (see\n`man qemu-img` for gory details). I am calling my virtual\nharddrive \"freedos.img\".  With `qemu-img` the size can be\nspecified with a suffix like \"K\" for kilobytes,  \"M\" for\nmegabytes and \"G\" for gigabytes. DOS is a minimal requirements\na small (by today's standards) 750 megabyte harddrive seems\nappropriate.\n\n~~~\nqemu-img create freedos.img 750M\n~~~\n\nFor my purposes I need a harddrive so I stopped there. You\ncan always create other drives and then restart your virtual\nmachine with the appropriate options.\n\nBring up my FreeDOS box\n-----------------------\n\nNow I was ready to boot from installation media and install\nFreeDOS 1.3rc4 on my virtual harddrive.  For that I\nuse a \"qemu\" command for the system I want to emulate.\nI picked `qemu-system-i386` (see can see\nthe gory details of that command using `man qemu-system-i386`).\nTo install FreeDOS I'm going to boot from the vmdk file \nprovided for the purpose of installation. I then use the FreeDOS\ninstaller to make my freedos.img file bootable with all the\nDOS software I want to play with.\n\n~~~\nqemu-system-i386 \\\n   -m 8 \\\n   -boot menu=on,strict=on \\\n   -hda freedos.img \\\n   -hdb FD13FULL.vmdk\n~~~\n\nAt this point you should see the machine start to boot, press Esc\nwhen prompted and select the second hard drive to boot from (that's\nour vmdk drive).  The drive is then treated like the CD-ROM, follow\nthe programs instructions for installation. You will need to reboot\nseveral times during the process. Until your full installation is\ncomplete you'll need to select the second harddrive as the boot drive\nand continue the installation.\n\nThe first time I successfully installed FreeDOS 1.3rc4 I just installed\nthe plain dos. When I re-did the process I install everything. It\nfills up my 750M virtual harddrive but rc4 includes development tools\nlike a C compiler.  That I think made it worth it.\n\nHere's a Bash script you can use to build your FreeDOS machine.\n\n~~~\n#!/bin/bash\n\nif [ ! -f freedos.img ]; then\n  echo \"Creating fresh Harddisk as drive C:\"\n  qemu-img create freedos.img 750M\nfi\necho \"Booting machine using FD13FULL.vmdk for installation\"\nqemu-system-i386 \\\n    -m 8 \\\n    -boot menu=on,strict=on \\\n    -hda freedos.img \\\n    -hdb FD13FULL.vmdk\n~~~\n\nAnd here is one for running it.\n\n~~~\n#!/bin/bash\n\necho \"Booting machine using freedos.img as drive C:\"\nqemu-system-i386 \\\n    -m 8 \\\n    -boot menu=on,strict=on \\\n    -hda freedos.img\n~~~\n\nNext step, explore FreeDOS and see what I can build.\n\nPutting everything together\n---------------------------\n\nBelow is a [script](run-freedos-1.3rc4.bash) I developed automating either building or running your FreeDOS setup.\n\n~~~\n#!/bin/bash\n\nif [ ! -f FD13FULL.vmdk ]; then\n    if [ ! -f FD13-FullUSB.zip ]; then\n      echo \"Missing FD13FULL.vmdk, downloading FD13-FullUSB.zip\"\n      curl -L -O https://www.ibiblio.org/pub/micro/pc-stuff/freedos/files/distributions/1.3/previews/1.3-rc4/FD13-FullUSB.zip\n    fi\n    echo \"Unzipping FD13-FullUSB.zip\"\n    unzip FD13-FullUSB.zip\nfi\n\nif [ ! -f freedos.img ]; then\n  echo \"Creating fresh Harddisk as drive C:\"\n  qemu-img create freedos.img 750M\n  echo \"Booting machine using FD13FULL.vmdk as drive C:\"\n  echo \"Installing FreeDOS on drive D:\"\n  qemu-system-i386 \\\n      -name FreeDOS \\\n      -machine pc \\\n      -m 32 \\\n      -boot order=c \\\n      -hda FD13FULL.vmdk \\\n      -hdb freedos.img \\\n      -parallel none \\\n      -vga cirrus \\\n      -display gtk\nelse\n  echo \"Booting machine using freedos.img on drive C:\"\n  qemu-system-i386 \\\n      -name FreeDOS \\\n      -machine pc \\\n      -m 32 \\\n      -boot menu=on,strict=on \\\n      -hda freedos.img \\\n      -parallel none \\\n      -vga cirrus \\\n      -display gtk\nfi\n~~~\n\n\nReference material\n------------------\n\nMy inspiration for this was the description of manual install in\nthe FreeDOS book section of the website, [Manual Install](https://www.freedos.org/books/get-started/june14-manual-install.html).\n\n\n",
      "data": {
        "author": "rsdoiel@gmail.com (R. S. Doiel)",
        "copyright": "copyright (c) 2021, R. S. Doiel",
        "date": "2021-11-27",
        "keywords": [
          "FreeDOS",
          "Qemu"
        ],
        "license": "https://creativecommons.org/licenses/by-sa/4.0/",
        "title": "Setting up FreeDOS 1.3rc4 with Qemu"
      },
      "url": "posts/2021/11/27/FreeDOS-1.3rc4-with-Qemu.json"
    }
  ]
}