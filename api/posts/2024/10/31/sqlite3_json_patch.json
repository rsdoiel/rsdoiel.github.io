{
  "content": "\n# SQLite3 json_patch is a jewel\n\nBy R. S. Doiel, 2024-10-31\n\nIf you’re working with an SQLite3 database table and have JSON or columns you need to merge with other columns then the `json_path` function comes in really handy.\nI have a SQLite3 database table with four columns.\n\n- _key (string)\n- src (json)\n- created (datestamp)\n- updated (datestamp)\n\nOccasionally I want to return the `_key`, `created` and `updated` columns as part of the JSON held in the `src` column.  In SQLite3 it is almost trivial.\n\n~~~sql\nselect \n  json_patch(json_object('key', _key, 'updated', updated, 'created', created), src) as object\n  from data;\n~~~\n\n",
  "content_ast": {
    "children": [
      {
        "children": [
          {
            "type": "text",
            "value": "SQLite3 json_patch is a jewel"
          }
        ],
        "depth": 1,
        "type": "heading"
      },
      {
        "children": [
          {
            "type": "text",
            "value": "By R. S. Doiel, 2024-10-31"
          }
        ],
        "type": "paragraph"
      },
      {
        "children": [
          {
            "type": "text",
            "value": "If you’re working with an SQLite3 database table and have JSON or columns you need to merge with other columns then the "
          },
          {
            "type": "inlineCode",
            "value": "json_path"
          },
          {
            "type": "text",
            "value": " function comes in really handy.\nI have a SQLite3 database table with four columns."
          }
        ],
        "type": "paragraph"
      },
      {
        "children": [
          {
            "children": [
              {
                "children": [
                  {
                    "type": "text",
                    "value": "_key (string)"
                  }
                ],
                "type": "paragraph"
              }
            ],
            "spread": false,
            "type": "listItem"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "type": "text",
                    "value": "src (json)"
                  }
                ],
                "type": "paragraph"
              }
            ],
            "spread": false,
            "type": "listItem"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "type": "text",
                    "value": "created (datestamp)"
                  }
                ],
                "type": "paragraph"
              }
            ],
            "spread": false,
            "type": "listItem"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "type": "text",
                    "value": "updated (datestamp)"
                  }
                ],
                "type": "paragraph"
              }
            ],
            "spread": false,
            "type": "listItem"
          }
        ],
        "ordered": false,
        "spread": false,
        "type": "list"
      },
      {
        "children": [
          {
            "type": "text",
            "value": "Occasionally I want to return the "
          },
          {
            "type": "inlineCode",
            "value": "_key"
          },
          {
            "type": "text",
            "value": ", "
          },
          {
            "type": "inlineCode",
            "value": "created"
          },
          {
            "type": "text",
            "value": " and "
          },
          {
            "type": "inlineCode",
            "value": "updated"
          },
          {
            "type": "text",
            "value": " columns as part of the JSON held in the "
          },
          {
            "type": "inlineCode",
            "value": "src"
          },
          {
            "type": "text",
            "value": " column.  In SQLite3 it is almost trivial."
          }
        ],
        "type": "paragraph"
      },
      {
        "lang": "sql",
        "type": "code",
        "value": "select \n  json_patch(json_object('key', _key, 'updated', updated, 'created', created), src) as object\n  from data;"
      }
    ],
    "type": "root"
  },
  "data": {
    "abstract": "Quick note about json_path function in SQLite3",
    "author": "R. S. Doiel",
    "byline": "R. S. Doiel",
    "created": "2024-10-31",
    "keywords": [
      "sql",
      "SQLite3"
    ],
    "pubDate": "2024-10-31",
    "title": "SQLite3 json_patch is a jewel"
  }
}